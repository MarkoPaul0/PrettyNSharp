<CheckBox x:Class="PrettyNSharp.SharpCheckbox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PrettyNSharp"
             mc:Ignorable="d" 
             x:Name="SCControl" MinHeight="13" MinWidth="13"
             d:DesignHeight="150" d:DesignWidth="150">
    <CheckBox.Resources>
        <ResourceDictionary>
            <PathGeometry x:Key="DEFAULT_CHECKMARK_GEOM">
                m 24.87906,133.61014 54.011684,45.32148 1.059053,-1.51247 L 90.406331,162.48567 141.19098,89.957682 124.80809,78.486256 75.027066,149.58093 37.734728,118.28926 Z
            </PathGeometry>
            <RectangleGeometry x:Key="DEFAULT_NULLMARK_GEOM" Rect="0,0,20,20"/>
            <Path x:Key="DEFAULT_CHECKMARK" Data="{StaticResource DEFAULT_CHECKMARK_GEOM}"/>
            <Style TargetType="{x:Type local:SharpCheckbox}">
                <Setter Property="Checkmark" Value="{StaticResource DEFAULT_CHECKMARK}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="BorderBrush" Value="#777777"/>
                <Setter Property="BorderOnHover" Value="#49B3F9"/>
                <Setter Property="MarkMargin" Value="1"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </CheckBox.Resources>
    <CheckBox.Template>
        <ControlTemplate TargetType="CheckBox">
            <BulletDecorator Background="Transparent" SnapsToDevicePixels="True" VerticalAlignment="Center">
                <BulletDecorator.Bullet>
                    <Border x:Name="Border" MinHeight="13" MinWidth="13"
                            Background="{TemplateBinding Background}"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                            Height="{Binding ElementName=SCControl, Path=Height, FallbackValue=20}"
                            CornerRadius="{Binding ElementName=SCControl, Path=CornerRadius, FallbackValue=0}"
                            BorderThickness="{Binding ElementName=SCControl, Path=BorderThickness, FallbackValue=1}"
                            BorderBrush="{Binding ElementName=SCControl, Path=BorderBrush, FallbackValue=Black}">
                        <Grid>
                            <Path x:Name="CheckMark" Margin="{Binding ElementName=SCControl, Path=MarkMargin, FallbackValue=2}"
                                Fill="{Binding ElementName=SCControl, Path=MarkBrush, FallbackValue=Black}" Stretch="Uniform"
                                Data="{Binding ElementName=SCControl, Path=Checkmark.Data, FallbackValue={StaticResource DEFAULT_CHECKMARK_GEOM}}" />
                            <Path x:Name="NullMark" Visibility="Hidden" Margin="{Binding ElementName=SCControl, Path=MarkMargin, FallbackValue=2}"
                                Fill="{Binding ElementName=SCControl, Path=MarkBrush, FallbackValue=Black}" Stretch="Uniform"
                                Data="{Binding ElementName=SCControl, Path=Nullmark.Data, FallbackValue={StaticResource DEFAULT_NULLMARK_GEOM}}" />
                        </Grid>
                    </Border>
                </BulletDecorator.Bullet>
                <ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Stretch">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="4,0,0,0"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="HorizontalAlignment" Value="{Binding ElementName=SCControl, Path=HorizontalContentAlignment, FallbackValue=Left}"/>
                            <Setter Property="VerticalAlignment" Value="{Binding ElementName=SCControl, Path=VerticalContentAlignment, FallbackValue=Center}"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </BulletDecorator>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="false">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="NullMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="CheckMark" Property="Fill" Value="{Binding ElementName=SCControl, Path=MarkHighlight}" />
                    <Setter TargetName="NullMark" Property="Fill" Value="{Binding ElementName=SCControl, Path=MarkHighlight}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ElementName=SCControl, Path=BorderOnHover, FallbackValue=#007ACC}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                    <Setter TargetName="CheckMark" Property="Fill" Value="Gray" />
                    <Setter TargetName="NullMark" Property="Fill" Value="Gray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </CheckBox.Template>
</CheckBox>
